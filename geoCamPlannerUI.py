# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.0pre on Wed Jul 20 09:56:48 2022
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class geoCamPlannerBase(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: geoCamPlannerBase.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetTitle("geoCamPlanner")

        # Menu Bar
        self.geoCamPlannerFrame_menubar = wx.MenuBar()
        self.FileMenuItem = wx.Menu()
        self.geoCamPlannerFrame_menubar.FileNewMenuItem = self.FileMenuItem.Append(wx.ID_NEW, "", "")
        self.Bind(wx.EVT_MENU, self.OnFileNew, id=wx.ID_NEW)
        self.geoCamPlannerFrame_menubar.FileOpenMenuItem = self.FileMenuItem.Append(wx.ID_OPEN, "", "")
        self.Bind(wx.EVT_MENU, self.OnFileOpen, id=wx.ID_OPEN)
        self.geoCamPlannerFrame_menubar.FileSaveMenuItem = self.FileMenuItem.Append(wx.ID_SAVE, "", "")
        self.Bind(wx.EVT_MENU, self.OnFileSave, id=wx.ID_SAVE)
        self.geoCamPlannerFrame_menubar.FileSaveAsMenuItem = self.FileMenuItem.Append(wx.ID_SAVEAS, "", "")
        self.Bind(wx.EVT_MENU, self.OnFileSaveAs, id=wx.ID_SAVEAS)
        self.geoCamPlannerFrame_menubar.Append(self.FileMenuItem, "&File")
        self.SetMenuBar(self.geoCamPlannerFrame_menubar)
        # Menu Bar end

        mainSizer = wx.BoxSizer(wx.VERTICAL)

        controlsSizer = wx.BoxSizer(wx.HORIZONTAL)
        mainSizer.Add(controlsSizer, 0, wx.EXPAND, 0)

        configSizer = wx.BoxSizer(wx.VERTICAL)
        controlsSizer.Add(configSizer, 1, wx.EXPAND, 0)

        self.configComboBox = wx.ComboBox(self, wx.ID_ANY, choices=[], style=wx.TE_PROCESS_ENTER)
        configSizer.Add(self.configComboBox, 0, wx.EXPAND, 0)

        self.configDescriptionTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_PROCESS_ENTER)
        configSizer.Add(self.configDescriptionTextCtrl, 1, wx.EXPAND, 0)

        paramsSizer = wx.FlexGridSizer(8, 5, 2, 2)
        controlsSizer.Add(paramsSizer, 3, wx.EXPAND, 0)

        paramsSizer.Add((20, 20), 0, 0, 0)

        self.xLabel = wx.StaticText(self, wx.ID_ANY, "X")
        paramsSizer.Add(self.xLabel, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)

        self.yLabel = wx.StaticText(self, wx.ID_ANY, "Y")
        paramsSizer.Add(self.yLabel, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)

        paramsSizer.Add((20, 20), 0, 0, 0)

        paramsSizer.Add((20, 20), 0, 0, 0)

        self.label_1 = wx.StaticText(self, wx.ID_ANY, "imager size (px,mm)")
        paramsSizer.Add(self.label_1, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        paramsSizer.Add(sizer_1, 1, wx.EXPAND, 0)

        self.imagerSizeXTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        sizer_1.Add(self.imagerSizeXTextCtrl, 1, wx.EXPAND, 0)

        self.imagerSizeXMMTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        sizer_1.Add(self.imagerSizeXMMTextCtrl, 1, wx.EXPAND, 0)

        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        paramsSizer.Add(sizer_2, 1, wx.EXPAND, 0)

        self.imagerSizeYTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        sizer_2.Add(self.imagerSizeYTextCtrl, 1, wx.EXPAND, 0)

        self.imagerSizeYMMTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        sizer_2.Add(self.imagerSizeYMMTextCtrl, 1, wx.EXPAND, 0)

        self.maxZoomLabel = wx.StaticText(self, wx.ID_ANY, "max zoom")
        paramsSizer.Add(self.maxZoomLabel, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.maxZoomTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        paramsSizer.Add(self.maxZoomTextCtrl, 0, wx.EXPAND, 0)

        self.baseFLabel = wx.StaticText(self, wx.ID_ANY, "base f (px,mm)")
        paramsSizer.Add(self.baseFLabel, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        paramsSizer.Add(sizer_3, 1, wx.EXPAND, 0)

        self.baseFXTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        sizer_3.Add(self.baseFXTextCtrl, 1, wx.EXPAND, 0)

        self.baseFXMMTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        sizer_3.Add(self.baseFXMMTextCtrl, 1, wx.EXPAND, 0)

        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        paramsSizer.Add(sizer_4, 1, wx.EXPAND, 0)

        self.baseFYTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        sizer_4.Add(self.baseFYTextCtrl, 1, wx.EXPAND, 0)

        self.baseFYMMTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        sizer_4.Add(self.baseFYMMTextCtrl, 1, wx.EXPAND, 0)

        self.rangelabel = wx.StaticText(self, wx.ID_ANY, "range (m)")
        paramsSizer.Add(self.rangelabel, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.rangeTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        paramsSizer.Add(self.rangeTextCtrl, 0, wx.EXPAND, 0)

        self.baseFovLabel = wx.StaticText(self, wx.ID_ANY, "base fov (deg)")
        paramsSizer.Add(self.baseFovLabel, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.baseFovXTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        paramsSizer.Add(self.baseFovXTextCtrl, 0, wx.EXPAND, 0)

        self.baseFovYTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        paramsSizer.Add(self.baseFovYTextCtrl, 0, wx.EXPAND, 0)

        self.heightLabel = wx.StaticText(self, wx.ID_ANY, "height (m)")
        paramsSizer.Add(self.heightLabel, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.heightTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        paramsSizer.Add(self.heightTextCtrl, 0, wx.EXPAND, 0)

        self.maxFLabel = wx.StaticText(self, wx.ID_ANY, "max f (px,mm)")
        paramsSizer.Add(self.maxFLabel, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        paramsSizer.Add(sizer_5, 1, wx.EXPAND, 0)

        self.maxFXTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        sizer_5.Add(self.maxFXTextCtrl, 1, wx.EXPAND, 0)

        self.maxFXMMTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        sizer_5.Add(self.maxFXMMTextCtrl, 1, wx.EXPAND, 0)

        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        paramsSizer.Add(sizer_6, 1, wx.EXPAND, 0)

        self.maxFYTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        sizer_6.Add(self.maxFYTextCtrl, 1, wx.EXPAND, 0)

        self.maxFYMMTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        sizer_6.Add(self.maxFYMMTextCtrl, 1, wx.EXPAND, 0)

        self.resolutionLabel = wx.StaticText(self, wx.ID_ANY, "resolution (m)")
        paramsSizer.Add(self.resolutionLabel, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.resolutionTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        paramsSizer.Add(self.resolutionTextCtrl, 0, wx.EXPAND, 0)

        self.maxFovLabel = wx.StaticText(self, wx.ID_ANY, "max fov (deg)")
        paramsSizer.Add(self.maxFovLabel, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.maxFovXTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        paramsSizer.Add(self.maxFovXTextCtrl, 0, wx.EXPAND, 0)

        self.maxFovYTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        paramsSizer.Add(self.maxFovYTextCtrl, 0, wx.EXPAND, 0)

        self.panAngleLabel = wx.StaticText(self, wx.ID_ANY, "pan angle (deg)")
        paramsSizer.Add(self.panAngleLabel, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.panAngleTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        paramsSizer.Add(self.panAngleTextCtrl, 0, wx.EXPAND, 0)

        self.fixedPixelAspectCheckBox = wx.CheckBox(self, wx.ID_ANY, "Fix pixel aspect")
        self.fixedPixelAspectCheckBox.SetValue(1)
        paramsSizer.Add(self.fixedPixelAspectCheckBox, 0, 0, 0)

        self.fixedBaseFOVCheckBox = wx.CheckBox(self, wx.ID_ANY, "Fix Base FOV")
        paramsSizer.Add(self.fixedBaseFOVCheckBox, 0, 0, 0)

        self.saveGraphButton = wx.Button(self, wx.ID_ANY, "Save Graph...")
        paramsSizer.Add(self.saveGraphButton, 0, wx.ALIGN_RIGHT, 0)

        self.tiltAngleLabel = wx.StaticText(self, wx.ID_ANY, "tilt angle (deg)")
        paramsSizer.Add(self.tiltAngleLabel, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.tiltAngleTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        paramsSizer.Add(self.tiltAngleTextCtrl, 0, wx.EXPAND, 0)

        paramsSizer.Add((20, 20), 0, 0, 0)

        paramsSizer.Add((20, 20), 0, 0, 0)

        paramsSizer.Add((20, 20), 0, 0, 0)

        self.rollRangeLabel = wx.StaticText(self, wx.ID_ANY, "roll range (deg)")
        paramsSizer.Add(self.rollRangeLabel, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.rollRangeTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        paramsSizer.Add(self.rollRangeTextCtrl, 0, wx.EXPAND, 0)

        paramsSizer.AddGrowableCol(1)
        paramsSizer.AddGrowableCol(2)
        paramsSizer.AddGrowableCol(4)

        self.SetSizer(mainSizer)
        mainSizer.Fit(self)

        self.Layout()

        self.configComboBox.Bind(wx.EVT_COMBOBOX, self.OnConfigCombo)
        self.configComboBox.Bind(wx.EVT_TEXT, self.OnConfigComboText)
        self.configComboBox.Bind(wx.EVT_TEXT_ENTER, self.OnConfigComboTextEnter)
        self.configDescriptionTextCtrl.Bind(wx.EVT_TEXT, self.OnConfigDescriptionText)
        self.configDescriptionTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnConfigDescriptionTextEnter)
        self.imagerSizeXTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnImagerSizeXChanged)
        self.imagerSizeXMMTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnImagerSizeXMMChanged)
        self.imagerSizeYTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnImagerSizeYChanged)
        self.imagerSizeYMMTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnImagerSizeYMMChanged)
        self.maxZoomTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnMaxZoomChanged)
        self.baseFXTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnBaseFXChanged)
        self.baseFXMMTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnBaseFXMMChanged)
        self.baseFYTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnBaseFYChanged)
        self.baseFYMMTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnBaseFYMMChanged)
        self.rangeTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnRangeChanged)
        self.baseFovXTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnBaseFovXChanged)
        self.baseFovYTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnBaseFovYChanged)
        self.heightTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnHeightChanged)
        self.maxFXTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnMaxFXChanged)
        self.maxFXMMTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnMaxFXMMChanged)
        self.maxFYTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnMaxFYChanged)
        self.maxFYMMTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnMaxFYMMChanged)
        self.resolutionTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnResolutionChanged)
        self.maxFovXTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnMaxFovXChanged)
        self.maxFovYTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnMaxFovYChanged)
        self.panAngleTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnPanAngleChanged)
        self.fixedBaseFOVCheckBox.Bind(wx.EVT_CHECKBOX, self.OnFixedBaseFOVChecked)
        self.saveGraphButton.Bind(wx.EVT_BUTTON, self.OnSaveGraph)
        self.tiltAngleTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnTiltAngleChanged)
        self.rollRangeTextCtrl.Bind(wx.EVT_TEXT_ENTER, self.OnRollRangeChanged)
        # end wxGlade

    def OnFileNew(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnFileNew' not implemented!")
        event.Skip()

    def OnFileOpen(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnFileOpen' not implemented!")
        event.Skip()

    def OnFileSave(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnFileSave' not implemented!")
        event.Skip()

    def OnFileSaveAs(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnFileSaveAs' not implemented!")
        event.Skip()

    def OnConfigCombo(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnConfigCombo' not implemented!")
        event.Skip()

    def OnConfigComboText(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnConfigComboText' not implemented!")
        event.Skip()

    def OnConfigComboTextEnter(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnConfigComboTextEnter' not implemented!")
        event.Skip()

    def OnConfigDescriptionText(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnConfigDescriptionText' not implemented!")
        event.Skip()

    def OnConfigDescriptionTextEnter(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnConfigDescriptionTextEnter' not implemented!")
        event.Skip()

    def OnImagerSizeXChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnImagerSizeXChanged' not implemented!")
        event.Skip()

    def OnImagerSizeXMMChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnImagerSizeXMMChanged' not implemented!")
        event.Skip()

    def OnImagerSizeYChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnImagerSizeYChanged' not implemented!")
        event.Skip()

    def OnImagerSizeYMMChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnImagerSizeYMMChanged' not implemented!")
        event.Skip()

    def OnMaxZoomChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnMaxZoomChanged' not implemented!")
        event.Skip()

    def OnBaseFXChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnBaseFXChanged' not implemented!")
        event.Skip()

    def OnBaseFXMMChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnBaseFXMMChanged' not implemented!")
        event.Skip()

    def OnBaseFYChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnBaseFYChanged' not implemented!")
        event.Skip()

    def OnBaseFYMMChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnBaseFYMMChanged' not implemented!")
        event.Skip()

    def OnRangeChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnRangeChanged' not implemented!")
        event.Skip()

    def OnBaseFovXChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnBaseFovXChanged' not implemented!")
        event.Skip()

    def OnBaseFovYChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnBaseFovYChanged' not implemented!")
        event.Skip()

    def OnHeightChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnHeightChanged' not implemented!")
        event.Skip()

    def OnMaxFXChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnMaxFXChanged' not implemented!")
        event.Skip()

    def OnMaxFXMMChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnMaxFXMMChanged' not implemented!")
        event.Skip()

    def OnMaxFYChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnMaxFYChanged' not implemented!")
        event.Skip()

    def OnMaxFYMMChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnMaxFYMMChanged' not implemented!")
        event.Skip()

    def OnResolutionChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnResolutionChanged' not implemented!")
        event.Skip()

    def OnMaxFovXChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnMaxFovXChanged' not implemented!")
        event.Skip()

    def OnMaxFovYChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnMaxFovYChanged' not implemented!")
        event.Skip()

    def OnPanAngleChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnPanAngleChanged' not implemented!")
        event.Skip()

    def OnFixedBaseFOVChecked(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnFixedBaseFOVChecked' not implemented!")
        event.Skip()

    def OnSaveGraph(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnSaveGraph' not implemented!")
        event.Skip()

    def OnTiltAngleChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnTiltAngleChanged' not implemented!")
        event.Skip()

    def OnRollRangeChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print("Event handler 'OnRollRangeChanged' not implemented!")
        event.Skip()

# end of class geoCamPlannerBase
