#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.5 on Tue Jun 25 13:02:08 2013

import wx

# begin wxGlade: extracode
# end wxGlade


class geoCamPlannerBase(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: geoCamPlannerBase.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.geoCamPlannerFrame_menubar = wx.MenuBar()
        self.FileMenuItem = wx.Menu()
        self.FileNewMenuItem = wx.MenuItem(self.FileMenuItem, wx.ID_NEW, "", "", wx.ITEM_NORMAL)
        self.FileMenuItem.AppendItem(self.FileNewMenuItem)
        self.FileOpenMenuItem = wx.MenuItem(self.FileMenuItem, wx.ID_OPEN, "", "", wx.ITEM_NORMAL)
        self.FileMenuItem.AppendItem(self.FileOpenMenuItem)
        self.FileSaveMenuItem = wx.MenuItem(self.FileMenuItem, wx.ID_SAVE, "", "", wx.ITEM_NORMAL)
        self.FileMenuItem.AppendItem(self.FileSaveMenuItem)
        self.FileSaveAsMenuItem = wx.MenuItem(self.FileMenuItem, wx.ID_SAVEAS, "", "", wx.ITEM_NORMAL)
        self.FileMenuItem.AppendItem(self.FileSaveAsMenuItem)
        self.geoCamPlannerFrame_menubar.Append(self.FileMenuItem, "&File")
        self.SetMenuBar(self.geoCamPlannerFrame_menubar)
        # Menu Bar end
        self.configComboBox = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN)
        self.configDescriptionTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER | wx.TE_MULTILINE)
        self.xLabel = wx.StaticText(self, -1, "X")
        self.yLabel = wx.StaticText(self, -1, "Y")
        self.label_1 = wx.StaticText(self, -1, "imager size (px,mm)")
        self.imagerSizeXTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.imagerSizeXMMTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.imagerSizeYTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.imagerSizeYMMTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.maxZoomLabel = wx.StaticText(self, -1, "max zoom")
        self.maxZoomTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.baseFLabel = wx.StaticText(self, -1, "base f (px,mm)")
        self.baseFXTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.baseFXMMTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.baseFYTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.baseFYMMTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.rangelabel = wx.StaticText(self, -1, "range (m)")
        self.rangeTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.baseFovLabel = wx.StaticText(self, -1, "base fov (deg)")
        self.baseFovXTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.baseFovYTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.heightLabel = wx.StaticText(self, -1, "height (m)")
        self.heightTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.maxFLabel = wx.StaticText(self, -1, "max f (px,mm)")
        self.maxFXTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.maxFXMMTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.maxFYTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.maxFYMMTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.resolutionLabel = wx.StaticText(self, -1, "resolution (m)")
        self.resolutionTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.maxFovLabel = wx.StaticText(self, -1, "max fov (deg)")
        self.maxFovXTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.maxFovYTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.panAngleLabel = wx.StaticText(self, -1, "pan angle (deg)")
        self.panAngleTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.fixedPixelAspectCheckBox = wx.CheckBox(self, -1, "Fix pixel aspect")
        self.fixedBaseFOVCheckBox = wx.CheckBox(self, -1, "Fix Base FOV")
        self.saveGraphButton = wx.Button(self, -1, "Save Graph...")
        self.tiltAngleLabel = wx.StaticText(self, -1, "tilt angle (deg)")
        self.tiltAngleTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.rollRangeLabel = wx.StaticText(self, -1, "roll range (deg)")
        self.rollRangeTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.OnFileNew, self.FileNewMenuItem)
        self.Bind(wx.EVT_MENU, self.OnFileOpen, self.FileOpenMenuItem)
        self.Bind(wx.EVT_MENU, self.OnFileSave, self.FileSaveMenuItem)
        self.Bind(wx.EVT_MENU, self.OnFileSaveAs, self.FileSaveAsMenuItem)
        self.Bind(wx.EVT_TEXT, self.OnConfigComboText, self.configComboBox)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnConfigComboTextEnter, self.configComboBox)
        self.Bind(wx.EVT_COMBOBOX, self.OnConfigCombo, self.configComboBox)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnConfigDescriptionTextEnter, self.configDescriptionTextCtrl)
        self.Bind(wx.EVT_TEXT, self.OnConfigDescriptionText, self.configDescriptionTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnImagerSizeXChanged, self.imagerSizeXTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnImagerSizeXMMChanged, self.imagerSizeXMMTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnImagerSizeYChanged, self.imagerSizeYTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnImagerSizeYMMChanged, self.imagerSizeYMMTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnMaxZoomChanged, self.maxZoomTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnBaseFXChanged, self.baseFXTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnBaseFXMMChanged, self.baseFXMMTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnBaseFYChanged, self.baseFYTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnBaseFYMMChanged, self.baseFYMMTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnRangeChanged, self.rangeTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnBaseFovXChanged, self.baseFovXTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnBaseFovYChanged, self.baseFovYTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnHeightChanged, self.heightTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnMaxFXChanged, self.maxFXTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnMaxFXMMChanged, self.maxFXMMTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnMaxFYChanged, self.maxFYTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnMaxFYMMChanged, self.maxFYMMTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnResolutionChanged, self.resolutionTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnMaxFovXChanged, self.maxFovXTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnMaxFovYChanged, self.maxFovYTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnPanAngleChanged, self.panAngleTextCtrl)
        self.Bind(wx.EVT_CHECKBOX, self.OnFixedBaseFOVChecked, self.fixedBaseFOVCheckBox)
        self.Bind(wx.EVT_BUTTON, self.OnSaveGraph, self.saveGraphButton)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnTiltAngleChanged, self.tiltAngleTextCtrl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnRollRangeChanged, self.rollRangeTextCtrl)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: geoCamPlannerBase.__set_properties
        self.SetTitle("geoCamPlanner")
        self.fixedPixelAspectCheckBox.SetValue(1)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: geoCamPlannerBase.__do_layout
        mainSizer = wx.BoxSizer(wx.VERTICAL)
        controlsSizer = wx.BoxSizer(wx.HORIZONTAL)
        paramsSizer = wx.FlexGridSizer(8, 5, 2, 2)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        configSizer = wx.BoxSizer(wx.VERTICAL)
        configSizer.Add(self.configComboBox, 0, wx.EXPAND, 0)
        configSizer.Add(self.configDescriptionTextCtrl, 1, wx.EXPAND, 0)
        controlsSizer.Add(configSizer, 1, wx.EXPAND, 0)
        paramsSizer.Add((20, 20), 0, 0, 0)
        paramsSizer.Add(self.xLabel, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        paramsSizer.Add(self.yLabel, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        paramsSizer.Add((20, 20), 0, 0, 0)
        paramsSizer.Add((20, 20), 0, 0, 0)
        paramsSizer.Add(self.label_1, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add(self.imagerSizeXTextCtrl, 1, wx.EXPAND, 0)
        sizer_1.Add(self.imagerSizeXMMTextCtrl, 1, wx.EXPAND, 0)
        paramsSizer.Add(sizer_1, 1, wx.EXPAND, 0)
        sizer_2.Add(self.imagerSizeYTextCtrl, 1, wx.EXPAND, 0)
        sizer_2.Add(self.imagerSizeYMMTextCtrl, 1, wx.EXPAND, 0)
        paramsSizer.Add(sizer_2, 1, wx.EXPAND, 0)
        paramsSizer.Add(self.maxZoomLabel, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        paramsSizer.Add(self.maxZoomTextCtrl, 0, wx.EXPAND, 0)
        paramsSizer.Add(self.baseFLabel, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_3.Add(self.baseFXTextCtrl, 1, wx.EXPAND, 0)
        sizer_3.Add(self.baseFXMMTextCtrl, 1, wx.EXPAND, 0)
        paramsSizer.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_4.Add(self.baseFYTextCtrl, 1, wx.EXPAND, 0)
        sizer_4.Add(self.baseFYMMTextCtrl, 1, wx.EXPAND, 0)
        paramsSizer.Add(sizer_4, 1, wx.EXPAND, 0)
        paramsSizer.Add(self.rangelabel, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        paramsSizer.Add(self.rangeTextCtrl, 0, wx.EXPAND, 0)
        paramsSizer.Add(self.baseFovLabel, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        paramsSizer.Add(self.baseFovXTextCtrl, 0, wx.EXPAND, 0)
        paramsSizer.Add(self.baseFovYTextCtrl, 0, wx.EXPAND, 0)
        paramsSizer.Add(self.heightLabel, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        paramsSizer.Add(self.heightTextCtrl, 0, wx.EXPAND, 0)
        paramsSizer.Add(self.maxFLabel, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_5.Add(self.maxFXTextCtrl, 1, wx.EXPAND, 0)
        sizer_5.Add(self.maxFXMMTextCtrl, 1, wx.EXPAND, 0)
        paramsSizer.Add(sizer_5, 1, wx.EXPAND, 0)
        sizer_6.Add(self.maxFYTextCtrl, 1, wx.EXPAND, 0)
        sizer_6.Add(self.maxFYMMTextCtrl, 1, wx.EXPAND, 0)
        paramsSizer.Add(sizer_6, 1, wx.EXPAND, 0)
        paramsSizer.Add(self.resolutionLabel, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        paramsSizer.Add(self.resolutionTextCtrl, 0, wx.EXPAND, 0)
        paramsSizer.Add(self.maxFovLabel, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        paramsSizer.Add(self.maxFovXTextCtrl, 0, wx.EXPAND, 0)
        paramsSizer.Add(self.maxFovYTextCtrl, 0, wx.EXPAND, 0)
        paramsSizer.Add(self.panAngleLabel, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        paramsSizer.Add(self.panAngleTextCtrl, 0, wx.EXPAND, 0)
        paramsSizer.Add(self.fixedPixelAspectCheckBox, 0, 0, 0)
        paramsSizer.Add(self.fixedBaseFOVCheckBox, 0, 0, 0)
        paramsSizer.Add(self.saveGraphButton, 0, wx.ALIGN_RIGHT, 0)
        paramsSizer.Add(self.tiltAngleLabel, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        paramsSizer.Add(self.tiltAngleTextCtrl, 0, wx.EXPAND, 0)
        paramsSizer.Add((20, 20), 0, 0, 0)
        paramsSizer.Add((20, 20), 0, 0, 0)
        paramsSizer.Add((20, 20), 0, 0, 0)
        paramsSizer.Add(self.rollRangeLabel, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        paramsSizer.Add(self.rollRangeTextCtrl, 0, wx.EXPAND, 0)
        paramsSizer.AddGrowableCol(1)
        paramsSizer.AddGrowableCol(2)
        paramsSizer.AddGrowableCol(4)
        controlsSizer.Add(paramsSizer, 3, wx.EXPAND, 0)
        mainSizer.Add(controlsSizer, 0, wx.EXPAND, 0)
        self.SetSizer(mainSizer)
        mainSizer.Fit(self)
        self.Layout()
        # end wxGlade

    def OnFileNew(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnFileNew' not implemented!"
        event.Skip()

    def OnFileOpen(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnFileOpen' not implemented!"
        event.Skip()

    def OnFileSave(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnFileSave' not implemented!"
        event.Skip()

    def OnFileSaveAs(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnFileSaveAs' not implemented!"
        event.Skip()

    def OnConfigComboText(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnConfigComboText' not implemented!"
        event.Skip()

    def OnConfigComboTextEnter(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnConfigComboTextEnter' not implemented!"
        event.Skip()

    def OnConfigCombo(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnConfigCombo' not implemented!"
        event.Skip()

    def OnConfigDescriptionTextEnter(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnConfigDescriptionTextEnter' not implemented!"
        event.Skip()

    def OnConfigDescriptionText(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnConfigDescriptionText' not implemented!"
        event.Skip()

    def OnImagerSizeXChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnImagerSizeXChanged' not implemented!"
        event.Skip()

    def OnImagerSizeXMMChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnImagerSizeXMMChanged' not implemented!"
        event.Skip()

    def OnImagerSizeYChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnImagerSizeYChanged' not implemented!"
        event.Skip()

    def OnImagerSizeYMMChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnImagerSizeYMMChanged' not implemented!"
        event.Skip()

    def OnMaxZoomChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnMaxZoomChanged' not implemented!"
        event.Skip()

    def OnBaseFXChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnBaseFXChanged' not implemented!"
        event.Skip()

    def OnBaseFXMMChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnBaseFXMMChanged' not implemented!"
        event.Skip()

    def OnBaseFYChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnBaseFYChanged' not implemented!"
        event.Skip()

    def OnBaseFYMMChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnBaseFYMMChanged' not implemented!"
        event.Skip()

    def OnRangeChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnRangeChanged' not implemented!"
        event.Skip()

    def OnBaseFovXChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnBaseFovXChanged' not implemented!"
        event.Skip()

    def OnBaseFovYChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnBaseFovYChanged' not implemented!"
        event.Skip()

    def OnHeightChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnHeightChanged' not implemented!"
        event.Skip()

    def OnMaxFXChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnMaxFXChanged' not implemented!"
        event.Skip()

    def OnMaxFXMMChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnMaxFXMMChanged' not implemented!"
        event.Skip()

    def OnMaxFYChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnMaxFYChanged' not implemented!"
        event.Skip()

    def OnMaxFYMMChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnMaxFYMMChanged' not implemented!"
        event.Skip()

    def OnResolutionChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnResolutionChanged' not implemented!"
        event.Skip()

    def OnMaxFovXChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnMaxFovXChanged' not implemented!"
        event.Skip()

    def OnMaxFovYChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnMaxFovYChanged' not implemented!"
        event.Skip()

    def OnPanAngleChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnPanAngleChanged' not implemented!"
        event.Skip()

    def OnFixedBaseFOVChecked(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnFixedBaseFOVChecked' not implemented!"
        event.Skip()

    def OnSaveGraph(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnSaveGraph' not implemented!"
        event.Skip()

    def OnTiltAngleChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnTiltAngleChanged' not implemented!"
        event.Skip()

    def OnRollRangeChanged(self, event):  # wxGlade: geoCamPlannerBase.<event_handler>
        print "Event handler `OnRollRangeChanged' not implemented!"
        event.Skip()

# end of class geoCamPlannerBase
if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    geoCamPlannerFrame = geoCamPlannerBase(None, -1, "")
    app.SetTopWindow(geoCamPlannerFrame)
    geoCamPlannerFrame.Show()
    app.MainLoop()
